//
//  FavorBoxViewController.m
//  XinHuaNewsIOS
//
//  Created by apple on 12-5-4.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "FavorBoxViewController.h"
#import "NewsFavor.h"
#import "NewsDbOperator.h"
#import "XinHuaAppDelegate.h"
#import "NewsArticleViewController.h"
#import "CustomAlert.h"

@interface FavorBoxViewController ()

@end

@implementation FavorBoxViewController
@synthesize favor_list=_favor_list;

@synthesize requestStr;
@synthesize titleCont;
@synthesize favorTitle;
@synthesize table;
@synthesize emptyinfo_view;

- (void)viewDidUnload
{
    [super viewDidUnload];
    [_favor_list release];
    [requestStr release];
    [titleCont release];
    [favorTitle release];
    [table release];
    [emptyinfo_view release];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBar.hidden=YES;
    UIImageView* bimgv = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
    bimgv.userInteractionEnabled = YES;
    bimgv.image = [UIImage imageNamed:@"titlebg.png"];
    UIButton* butb = [[UIButton alloc] initWithFrame:CGRectMake(5, 5, 35, 35)];
    butb.showsTouchWhenHighlighted=YES;
    [butb addTarget:self action:@selector(backAction:) forControlEvents:UIControlEventTouchUpInside];
    [butb setBackgroundImage:[UIImage imageNamed:@"backheader.png"] forState:UIControlStateNormal];
    [bimgv addSubview:butb];
    [butb release];
    
    UILabel* lab = [[UILabel alloc] initWithFrame:CGRectMake(100, 0, 120, 40)];
    [self.view addSubview:lab];
    lab.text = @"我的收藏";
    lab.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:20];
    lab.textAlignment = UITextAlignmentCenter;
    lab.backgroundColor = [UIColor clearColor];
    lab.textColor = [UIColor whiteColor];
    [bimgv addSubview:lab];
    [lab release];
    
    UIButton *trashBtn = [[UIButton alloc] initWithFrame:CGRectMake(270, 8, 43,29)];     
    UIImage * trash_image=[UIImage imageNamed:@"EMPTY.png"];
    [trashBtn setImage:trash_image forState:UIControlStateNormal];
    [trashBtn  addTarget:self action:@selector(delAllFavors) forControlEvents:UIControlEventTouchUpInside];
    [bimgv addSubview:trashBtn];
    [trashBtn release];
    [self.view addSubview:bimgv];
    [bimgv release];
    table = [[UITableView alloc] initWithFrame:CGRectMake(0,44, 320, 416) style:UITableViewStylePlain];
    table.delegate = self;
    table.dataSource = self;
    [self.view addSubview:table];
    [table release];
    
    
//    NSSortDescriptor *sortDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"Two" ascending:NO comparator:^(id obj1, id obj2) {
//        if ([obj1 floatValue] > [obj2 floatValue]) {
//            return (NSComparisonResult)NSOrderedDescending;
//        }
//        if ([obj1 floatValue] < [obj2 floatValue]) {
//            return (NSComparisonResult)NSOrderedAscending;
//        }
//        return (NSComparisonResult)NSOrderedSame;
//    }];
//    
//    [array sortUsingDescriptors:[NSArray arrayWithObject:sortDescriptor]];
    //读取搜藏夹里面的内容
    
    NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
    NSString *path=[paths objectAtIndex:0];  
    NSString *filename=[path stringByAppendingPathComponent:@"fav.plist"];   //获取路径
    
    NSMutableDictionary* dict = [[ NSMutableDictionary alloc ] initWithContentsOfFile:filename];
    NSArray *keys=[dict keysSortedByValueUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj1 compare:obj2];
    }];
    NSLog(@"keys %@",keys);
    //titleCont = [[NSMutableArray alloc] initWithArray:[dict allKeys]];
    titleCont=[[NSMutableArray alloc] initWithArray:[dict keysSortedByValueUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj2 compare:obj1];
    }]];
    requestStr = [[NSMutableArray alloc] initWithArray:[dict allValues]];
    [dict release];
    [requestStr sortUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj2 compare:obj1];
    }];

    [self.table reloadData];
    [self setExtraCellHidden:self.table];
    [self makeEmptyInfo];
    if([titleCont count]>0){
        [self hideEmptyInfo];
    }else{
        [self showEmptyInfo];
    }
    
    NSLog(@"FavBoxView____%@",titleCont);
    NSLog(@"FavBoxView____%@",requestStr );
    
    
}
-(void)showEmptyInfo{
    self.emptyinfo_view.hidden=NO;
}
-(void)makeEmptyInfo{
    UIView *emptyView=[[UIView alloc]initWithFrame:CGRectMake(0,44,320,416)];
//    emptyView.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"1.png"]];
    UILabel* labtext = [[UILabel alloc] initWithFrame:CGRectMake(0, 150, 300, 100)];
    labtext.backgroundColor = [UIColor clearColor];
    labtext.text = @"无收藏";
    labtext.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:20];
    labtext.textAlignment=UITextAlignmentCenter;
    labtext.textColor=[UIColor grayColor];
    labtext.backgroundColor = [UIColor clearColor];
    [emptyView addSubview:labtext];
    [labtext release];
    self.emptyinfo_view=emptyView;
    self.emptyinfo_view.hidden=YES;
    [self.view  addSubview:emptyView];
    [emptyView release];
}
-(void)hideEmptyInfo{
    self.emptyinfo_view.hidden=YES;
}
-(void)backAction:(id)sender{
     [self dismissViewControllerAnimated:YES completion:nil];
}



- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    return [self.titleCont count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"Cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
   
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];     
    }
    NSArray *views = [cell subviews];
    for(UIView* view in views)
    {
        [view removeFromSuperview];
    }
    
    UIImageView *cellbackground_image=[[UIImageView alloc] initWithImage: [UIImage imageNamed:@"cellbackground.png"]];   
    cell.backgroundView = cellbackground_image;
    [cellbackground_image release];
    UIImageView *image = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"redarrow.png"]];
    image.frame = CGRectMake(300, 15, 11, 12);
    [cell addSubview:image];
    [image release];
    NSLog(@"titleCon__%@",titleCont);
    UILabel* labtext = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 280, 26)];
    labtext.backgroundColor = [UIColor clearColor];
    labtext.text = [titleCont objectAtIndex:indexPath.row];
//    labtext.font = [UIFont fontWithName:@"Arial" size:12];
//    labtext.textColor=[UIColor blackColor];
//    labtext.numberOfLines=2;
    labtext.font = [UIFont fontWithName:@"system" size:15];
    labtext.textColor=[UIColor blackColor];
    labtext.backgroundColor = [UIColor clearColor];
    [cell addSubview:labtext];
    [labtext release];
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{

    NewsArticleViewController *aController = [[NewsArticleViewController alloc] init];
    NSLog(@"requeststr__%@",requestStr);
    aController.siblings=requestStr;   
    NSLog(@"indexPath%d",indexPath.row);
    aController.index=indexPath.row;
    aController.type=@"file";
    aController.baseURL=@"";
    aController.channel_title=@"我的收藏";
    aController.item_title=@"我的收藏";
    aController.delegate=self;
    [self.navigationController pushViewController:aController animated:YES];
    [aController release];
    
}


// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the specified item to be editable.
    return YES;
}

- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{  
    return @"删除";  
}  

// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [self removeFavorWith:[titleCont objectAtIndex:indexPath.row]];
        //[tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}



#pragma mark - Table view delegate
-(void)getFavorItemsFormDB{
    self.favor_list = (NSMutableArray *)[AppDelegate.db AllFavor];
    [self.table reloadData];
}
-(void)delAllFavors{    
    UIAlertView* alert = [[UIAlertView alloc] initWithTitle:@"" message:@"您确定删除所有收藏文件吗？" delegate:self  cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
//    CustomAlert *alert=[[CustomAlert alloc] initWithImage:[UIImage imageNamed:@"alertbg.png"] contentImage:nil];
//    alert.message=@"确定要删除所有收藏吗?";
//    UIButton* regbu = [[UIButton alloc] initWithFrame:CGRectMake(20, 120, 110, 35)];
//    [regbu setBackgroundImage:[UIImage imageNamed:@"reg_reg.png"] forState:UIControlStateNormal];
//        
//    UIButton* canBu = [[UIButton alloc] initWithFrame:CGRectMake(143, 120, 110, 35)];
//    [canBu setBackgroundImage:[UIImage imageNamed:@"reg_can.png"] forState:UIControlStateNormal];
//    
//    [alert addButtonWithUIButton:regbu];
//    [alert addButtonWithUIButton:canBu];
    alert.delegate=self;
    [alert show];    
  }

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{    
    if (buttonIndex == 1) {         
         NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
         NSString *path=[paths objectAtIndex:0];  
         NSString *filename=[path stringByAppendingPathComponent:@"fav.plist"];   //获取路径
         NSMutableDictionary* dict = [[ NSMutableDictionary alloc ] initWithContentsOfFile:filename];
         [dict removeAllObjects];
         [dict writeToFile:filename atomically:YES]; 
         titleCont = [[NSMutableArray alloc] initWithArray:[dict allKeys]];
         requestStr = [[NSMutableArray alloc] initWithArray:[dict allValues]];
        [dict release];
         [self.table reloadData];
        if([titleCont count]>0){
            [self hideEmptyInfo];
        }else{
            [self showEmptyInfo];
        }
    }
}

-(void)removeFavorWith:(NSString *)title{
    NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
    NSString *path=[paths objectAtIndex:0];  
    NSString *filename=[path stringByAppendingPathComponent:@"fav.plist"];   //获取路径
    NSMutableDictionary* dict = [[ NSMutableDictionary alloc ] initWithContentsOfFile:filename];
    [dict removeObjectForKey:title];
    [dict writeToFile:filename atomically:YES]; 
    titleCont=[[NSMutableArray alloc] initWithArray:[dict keysSortedByValueUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj2 compare:obj1];
    }]];
    requestStr = [[NSMutableArray alloc] initWithArray:[dict allValues]];
    [dict release];
    [self.table reloadData];
    if([titleCont count]>0){
        [self hideEmptyInfo];
    }else{
        [self showEmptyInfo];
    }
}
-(void)updateFavorList{
    NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
    NSString *path=[paths objectAtIndex:0];  
    NSString *filename=[path stringByAppendingPathComponent:@"fav.plist"];   //获取路径
    
    NSMutableDictionary* dict = [[ NSMutableDictionary alloc ] initWithContentsOfFile:filename];
    
    titleCont=[[NSMutableArray alloc] initWithArray:[dict keysSortedByValueUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj2 compare:obj1];
    }]];
    NSLog(@"%@",filename);
   // titleCont = [[NSMutableArray alloc] initWithArray:[dict allKeys]];
    
    requestStr = [[NSMutableArray alloc] initWithArray:[dict allValues]];
    [dict release];
    [requestStr sortUsingComparator:^(id obj1, id obj2){
        return (NSComparisonResult)[obj2 compare:obj1];
    }];
    if([titleCont count]>0){
        [self hideEmptyInfo];
    }else{
        [self showEmptyInfo];
    }
    [self.table reloadData];
}
-(void)setExtraCellHidden:(UITableView *)tableview{
    UIView *view=[UIView new];
    view.backgroundColor=[UIColor clearColor];
    [tableview setTableFooterView:view];
    [view release];       
}
-(void)update{
    [self updateFavorList];
}
@end
