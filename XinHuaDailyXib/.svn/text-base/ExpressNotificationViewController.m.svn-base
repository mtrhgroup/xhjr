//
//  ExpressViewController.m
//  XinHuaDailyXib
//
//  Created by apple on 12-6-20.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "ExpressNotificationViewController.h"
#import "NewsDownLoadZipWorkTask.h"
#import "NewsDefine.h"
#import "ASIHTTPRequest.h"
#import "NSIks.h"
#import "NewsXmlParser.h"
#import "XinHuaAppDelegate.h"
#import "NewsDbOperator.h"
@interface ExpressNotificationViewController ()

@end

@implementation ExpressNotificationViewController
@synthesize webView;
@synthesize waitingView;
@synthesize indicator;
@synthesize item_id;
@synthesize downloadTasks=_downloadTasks;
@synthesize emptyinfo_view;

- (void)viewDidUnload
{
    [super viewDidUnload];
    [webView release];
    [waitingView release];
    [indicator release];
    [item_id release];
    _downloadTasks.delegate=nil;
    [_downloadTasks release];
    [emptyinfo_view release];
    // Release any retained subviews of the main view.
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBar.hidden = YES;
    UIImageView* bimgv = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
    bimgv.userInteractionEnabled = YES;
    bimgv.image = [UIImage imageNamed:@"titlebg.png"];
    UIButton* butb = [[UIButton alloc] initWithFrame:CGRectMake(5, 5, 35, 35)];
    butb.showsTouchWhenHighlighted=YES;
    [butb addTarget:self action:@selector(backAction) forControlEvents:UIControlEventTouchUpInside];
    [butb setBackgroundImage:[UIImage imageNamed:@"backheader.png"] forState:UIControlStateNormal];
    [bimgv addSubview:butb];
    [butb release];
    NSLog(@"AAAAA");
    UILabel* lab = [[UILabel alloc] initWithFrame:CGRectMake(100, 0, 120, 40)];
    [self.view addSubview:lab];
    lab.text = @"专题快讯";
    lab.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:20];
    lab.textAlignment = UITextAlignmentCenter;
    lab.backgroundColor = [UIColor clearColor];
    lab.textColor = [UIColor whiteColor];
    [bimgv addSubview:lab];
    [lab release];
    [self.view addSubview:bimgv];
    [bimgv release];
    [self makeWaitingView];
    [self showWaitingView];
    
    webView = [[UIWebView alloc] initWithFrame:CGRectMake(0, 44, 320, 416)];
    self.webView.delegate=self;
   
    [self.view addSubview:webView];
    self.downloadTasks=[[[NewsDownLoadZipWorkTask alloc]init] autorelease];
    self.downloadTasks.delegate=self; 
    [self loadNewsFromWeb];
    [self makeEmptyInfo];

}
-(void)backAction{
    [self dismissModalViewControllerAnimated:YES];
}
-(void)loadNewsFromLocal{

    
    XDailyItem* tempItem;
    tempItem =[AppDelegate.db GetXdailyByItemId: item_id];
    if(tempItem!=nil) 
    {
         [self NewsDownloadFileCompleted:tempItem];
                 
    }
    //[self NewsDownloadFileCompleted:itemAtIndex];

}

-(void)loadNewsFromWeb{

    
    XDailyItem* tempItem;
    tempItem =[AppDelegate.db GetXdailyByItemId: item_id];
    if(tempItem!=nil) 
    {
        [self NewsDownloadFileCompleted:tempItem];
        return;
        
    }
    
    NSString*  itemurl =  [NSString stringWithFormat:KXdailyUrlOnlyOne,self.item_id];
    NSLog(@"itemurl = %@",itemurl);
    ASIHTTPRequest* myrequest = [ASIHTTPRequest requestWithURL:[NSURL URLWithString:itemurl]];
    myrequest.defaultResponseEncoding = NSUTF8StringEncoding;
    [myrequest setCompletionBlock:^{
        NSString *responseString = [myrequest responseString];
        NSLog(@"responseString = %@",responseString);        
        XDailyItem * xdaily = [NewsXmlParser ParseXDailyItem:responseString];
        xdaily.item_id=self.item_id;
        if(![_downloadTasks addTask:xdaily]){
            [self loadNewsFromLocal];
        }
        [myrequest release];
    }];
    
    [myrequest setFailedBlock:^{
        NSError *error = [myrequest error];
        NSLog(@"error = %@",[error localizedDescription]);
        [myrequest release];
    }];
    [myrequest startAsynchronous];
}

-(void)makeWaitingView{
    waitingView=[[UIView alloc] initWithFrame:CGRectMake(0, 44, 320, 460)];
    waitingView.backgroundColor=[UIColor colorWithWhite:1 alpha:1];
    waitingView.hidden=true;
    indicator=[[UIActivityIndicatorView alloc] initWithFrame:CGRectMake(150, 100, 32, 32)];
    [indicator setActivityIndicatorViewStyle:UIActivityIndicatorViewStyleGray];
    UIImageView *imageView=[[UIImageView alloc]initWithFrame:CGRectMake(40, 150, 231, 65)];
    imageView.image=[UIImage imageNamed:@"logo.png"];
    [waitingView addSubview:imageView];
    [imageView release];
    [waitingView addSubview:indicator];
    [self.view addSubview:waitingView];
    
}
-(void)showWaitingView{
    [indicator startAnimating];
    waitingView.hidden=false;
}
-(void)hideWaitingView{
    [indicator stopAnimating];
    waitingView.hidden=true;
}
-(void)NewsDownloadFileCompleted:(XDailyItem*) item{
    NSString* path_url = [item.zipurl stringByReplacingOccurrencesOfString:@"\\" withString:@"/"];   
    NSString* url=[item.pageurl stringByReplacingOccurrencesOfString:@"\\" withString:@"/"]; 
    NSString* filename=[url lastPathComponent];
    NSString* dirName = [path_url lastPathComponent];
    NSString* filePath =[[CommonMethod fileWithDocumentsPath:dirName] stringByDeletingPathExtension];    
    NSString* urlStr=[NSString stringWithFormat:@"%@/%@",[filePath stringByDeletingPathExtension],filename];  
    item.isRead  = YES;
    [AppDelegate.db ModifyDailyNews:item];
    [AppDelegate.db SaveDb];
   [self.webView loadRequest:[NSURLRequest requestWithURL:[NSURL fileURLWithPath:urlStr]]];
    
}
-(void)NewsDownloadFileErrCallBack:(XDailyItem*) item{
    //[self loadNewsFromLocal];
    [self showEmptyInfo];

}
-(void)AllZipFinished{
    
    //NSLog(@"%@",@"AllZipFinished");
}
- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error
{
    //    UIAlertView *alterview = [[UIAlertView alloc] initWithTitle:@"" message:[error localizedDescription]  delegate:nil cancelButtonTitle:nil otherButtonTitles:@"OK", nil];
    //    [alterview show];
   // 
}
- (BOOL)webView:(UIWebView *)webView2 shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {
    return YES;
    
}

- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    [self hideWaitingView];
    NSString *strFontSize=[[NSUserDefaults standardUserDefaults] objectForKey:@"FONTSIZE"];
    if([strFontSize isEqualToString:@"大"]){
        [self.webView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '150%'"]; 
    }else if([strFontSize isEqualToString:@"中"]){
        [self.webView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '100%'"]; 
    }else if([strFontSize isEqualToString:@"小"]){
        [self.webView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '50%'"]; 
    }
    
}
-(void)showEmptyInfo{
    self.emptyinfo_view.hidden=NO;
}
-(void)makeEmptyInfo{
    UIView *emptyView=[[UIView alloc]initWithFrame:CGRectMake(0,44,320,416)];
    //    emptyView.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"1.png"]];
    UILabel* labtext = [[UILabel alloc] initWithFrame:CGRectMake(0, 150, 300, 100)];
    labtext.backgroundColor = [UIColor clearColor];
    labtext.text = @"下载失败，可主页面手动更新，继续尝试下载。";
    labtext.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:20];
    labtext.textAlignment=UITextAlignmentCenter;
    labtext.textColor=[UIColor grayColor];
    labtext.backgroundColor = [UIColor clearColor];
    [emptyView addSubview:labtext];
    [labtext release];
    self.emptyinfo_view=emptyView;
    self.emptyinfo_view.hidden=YES;
    [self.view  addSubview:emptyView];
    [emptyView release];
}
-(void)hideEmptyInfo{
    self.emptyinfo_view.hidden=YES;
}


- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
